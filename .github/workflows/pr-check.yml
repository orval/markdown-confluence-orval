name: Pull Request Verification

on:
  pull_request:
    branches:
      - main

permissions: read-all

concurrency:
  group: "ci-check"
  cancel-in-progress: false

jobs:
  build-and-lint:
    runs-on: ubuntu-latest
    outputs:
      eslint_status: ${{ steps.eslint.outcome }}
      prettier_status: ${{ steps.prettier.outcome }}
      tests_status: ${{ steps.tests.outcome }}
      build_status: ${{ steps.build.outcome }}
      builddocker_status: ${{ steps.builddocker.outcome }}

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@8ca2b8b2ece13480cda6dacd3511b49857a23c09 # v2.5.1
      with:
        egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

    - name: Check out repository code
      uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0

    - name: Set up Node.js
      uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3.8.1
      with:
        node-version: "16.x"

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint
      id: eslint
      continue-on-error: true
      run: npm run lint -ws --if-present

    - name: Run Prettier check
      id: prettier
      continue-on-error: true
      run: npm run prettier-check -ws --if-present

    - name: Run Tests
      id: tests
      continue-on-error: true
      run: npm run test -ws --if-present
      env:
        CONFLUENCE_BASE_URL: ${{ secrets.CONFLUENCE_BASE_URL }}
        ATLASSIAN_USERNAME: ${{ secrets.ATLASSIAN_USERNAME }}
        ATLASSIAN_API_TOKEN: ${{ secrets.ATLASSIAN_API_TOKEN }}
        CONFLUENCE_PARENT_ID: "IGNORE ME"

    - name: Run npm build
      id: build
      continue-on-error: true
      run: npm run build -ws --if-present

    - name: Run docker build
      id: builddocker
      continue-on-error: true
      run: npm run build:docker -ws --if-present

    - name: Report Errors
      if: ${{ always() }}
      run: |
        echo "ESLint status: ${{ steps.eslint.outcome }}"
        echo "Prettier status: ${{ steps.prettier.outcome }}"
        echo "Tests status: ${{ steps.tests.outcome }}"
        echo "Build status: ${{ steps.build.outcome }}"
        echo "Build Docker status: ${{ steps.builddocker.outcome }}"
        if [[ ${{ steps.eslint.outcome }} == 'failure' ]] \
        || [[ ${{ steps.prettier.outcome }} == 'failure' ]] \
        || [[ ${{ steps.tests.outcome }} == 'failure' ]] \
        || [[ ${{ steps.build.outcome }} == 'failure' ]] \
        || [[ ${{ steps.builddocker.outcome }} == 'failure' ]] \
        ; then
          exit 1
        fi
